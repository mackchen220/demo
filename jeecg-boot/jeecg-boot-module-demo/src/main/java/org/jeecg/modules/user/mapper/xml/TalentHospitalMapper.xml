<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.jeecg.modules.user.mapper.TalentHospitalMapper">
  <resultMap id="BaseResultMap" type="org.jeecg.modules.user.model.TalentHospital">
    <!--@mbg.generated-->
    <!--@Table tb_talent_hospital-->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="hospital_id" jdbcType="VARCHAR" property="hospitalId" />
    <result column="talent_id" jdbcType="VARCHAR" property="talentId" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="update_time" jdbcType="VARCHAR" property="updateTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="del_flag" jdbcType="INTEGER" property="delFlag" />
  </resultMap>




  <resultMap id="UserProjectVoMap" type="org.jeecg.modules.user.model.vo.UserProjectVo">
    <!--@mbg.generated-->
    <!--@Table tb_talent_hospital-->
    <result column="hospital_id" jdbcType="VARCHAR" property="hospitalId" />
    <result column="talent_id" jdbcType="VARCHAR" property="talentId" />
    <result column="average_score" jdbcType="VARCHAR" property="averageScore" />
    <result column="project_name" jdbcType="VARCHAR" property="projectName" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="price_low" jdbcType="BIGINT" property="priceLow" />
    <result column="price_high" jdbcType="BIGINT" property="priceHigh" />
    <result column="head_image" jdbcType="VARCHAR" property="headImage" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
  </resultMap>


  <resultMap id="HospitalResultMap" type="org.jeecg.modules.user.model.vo.HospitalVo">
    <!--@mbg.generated-->
    <!--@Table tb_hospital-->
    <result column="id" jdbcType="VARCHAR" property="hospitalId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="image_url" jdbcType="VARCHAR" property="imageUrl" />
  </resultMap>

  <resultMap id="userVoResultMap" type="org.jeecg.modules.user.model.vo.UserModelVo">
    <!--@mbg.generated-->
    <!--@Table tb_hospital-->
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="head_image" jdbcType="VARCHAR" property="headImage" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
  </resultMap>

  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, hospital_id, talent_id, create_time, update_time, create_by, update_by, del_flag
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from tb_talent_hospital
    where id = #{id,jdbcType=VARCHAR}
  </select>


  <insert id="insertSelective" parameterType="org.jeecg.modules.user.model.TalentHospital">
    <!--@mbg.generated-->
    insert into tb_talent_hospital
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="hospitalId != null">
        hospital_id,
      </if>
      <if test="talentId != null">
        talent_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="hospitalId != null">
        #{hospitalId,jdbcType=VARCHAR},
      </if>
      <if test="talentId != null">
        #{talentId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.jeecg.modules.user.model.TalentHospital">
    <!--@mbg.generated-->
    update tb_talent_hospital
    <set>
      <if test="hospitalId != null">
        hospital_id = #{hospitalId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <update id="updateTalentHospital">
    update tb_talent_hospital set
        del_flag = 1
    where  hospital_id = #{hospitalId,jdbcType=VARCHAR} and talent_id  = #{talentId,jdbcType=VARCHAR}
  </update>

  <select id="loadTalentHospitalLst" parameterType="string" resultMap="HospitalResultMap">
    SELECT name,image_url,id from tb_hospital where id in
     (SELECT hospital_id from tb_talent_hospital where talent_id = #{id,jdbcType=VARCHAR})
  </select>

  <select id="loadAllTalent" parameterType="string" resultMap="userVoResultMap">
    SELECT a.talent_id as id,b.head_image,b.nick_name from  tb_talent_hospital  as a
    LEFT JOIN tb_user as b on b.id=a.talent_id
    where hospital_id =#{hospitalId,jdbcType=VARCHAR}
  </select>

  <select id="loadAllTalentId" resultMap="UserProjectVoMap">

      select c.nick_name,c.head_image,c.user_name,a.talent_id ,b.average_score,b.num  from (
      SELECT  DISTINCT talent_id from  tb_talent_hospital where del_flag= 0) as a
      LEFT JOIN tb_talent_info as b on b.user_id =a.talent_id
      LEFT JOIN tb_user as c on a.talent_id =c.id
<!--      <where>-->
<!--        <if test="search != null and search != ''">-->
<!--          nick_name LIKE '%${search}%'-->
<!--        </if>-->
<!--      </where>-->
      ORDER BY b.average_score DESC
  </select>


  <select id="loadAllTalentByHospitalId" resultMap="UserProjectVoMap" parameterType="string">
  select c.nick_name,c.head_image,c.user_name,a.talent_id ,b.average_score,b.num  from (
  SELECT  DISTINCT talent_id from  tb_talent_hospital where hospital_id =#{hospitalId,jdbcType=VARCHAR} ) as a
  LEFT JOIN tb_talent_info as b on b.user_id =a.talent_id
  LEFT JOIN tb_user as c on a.talent_id =c.id
  ORDER BY b.average_score DESC limit 1
  </select>





  <select id="getHospitalIdByTalentId" parameterType="string" resultType="string">
    select hospital_id from tb_talent_hospital where talent_id =#{talentId,jdbcType=VARCHAR}
  </select>

  <select id="getHospitalIdByProjectName" parameterType="string" resultMap="UserProjectVoMap">
        SELECT a.hospital_id ,a.project_id,b.price_low ,b.price_high,c.project_name from (
            SELECT hospital_id,project_id from  tb_hospital_project where project_id in(
            SELECT id from tb_project_info where project_name LIKE '%${search}%'  )
    ) as a LEFT JOIN tb_hospital_project as b
    on a.	project_id =b.project_id and a.hospital_id =b.hospital_id
    LEFT JOIN tb_project_info c on c.id =a.project_id
  </select>


</mapper>
